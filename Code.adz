local MemoryBypass = {}
function MemoryBypass.Obfuscate(str) local t={} for i=1,#str do table.insert(t,string.char(string.byte(str,i)+1)) end return table.concat(t) end
function MemoryBypass.Deobfuscate(str) local t={} for i=1,#str do table.insert(t,string.char(string.byte(str,i)-1)) end return table.concat(t) end
for i=1,100 do local t={} for j=1,50 do t[j]=math.random() end end

local Players = game:GetService(MemoryBypass.Deobfuscate("Tpmvsb"))
local Workspace = game:GetService(MemoryBypass.Deobfuscate("Xpslfdpe"))
local ReplicatedStorage = game:GetService(MemoryBypass.Deobfuscate("SfqjduftuUpsbhf"))
local UserInputService = game:GetService(MemoryBypass.Deobfuscate("VtfsJoquvUfswjdf"))
local RunService = game:GetService(MemoryBypass.Deobfuscate("SpopTfswjdf"))
local HttpService = game:GetService(MemoryBypass.Deobfuscate("IuucTfswjdf"))
local Camera = Workspace.CurrentCamera

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid",10)
local root = character:WaitForChild("HumanoidRootPart",10)

local config = {
    SPEED_MULTIPLIER = 10,
    FLY_SPEED = 150,
    JUMP_POWER = 150,
    REACH_DISTANCE = 100,
    WALLHACK_TRANSPARENCY = 0.5,
    FAKE_PING = 10,
    SPINBOT_SPEED = 50,
    DETECTION_RADIUS = 10,
    ORBIT_RADIUS = 6,
    ORBIT_HEIGHT = 10,
    ORBIT_SPEED = 5,
    SAFE_HP_THRESHOLD = 20,
    SAFE_RADIUS = 10,
    AUTO_SPRINT_SPEED = 32,
    WALL_CLIMB_FORCE = 100,
    NUKE_RADIUS = 25,
    FOV = 150,
    JUMP_VELOCITY = 100,
    TELEPORT_HEIGHT = 15,
    TELEPORT_DELAY = 0.05,
    DETECTION_RADIUS = 6,
    ORBIT_RADIUS = 4,
    ORBIT_HEIGHT = 6,
    ORBIT_SPEED = 2,
    DESCENT_INTERVAL = 2,
    DESCENT_DELAY = 0.1,
    SAFE_HP_THRESHOLD = 35,
    SAFE_RADIUS = 6,
    FLY_SPEED = 55,
    AUTO_SPRINT_SPEED = 16,
    REACH_DISTANCE = 50,
    WALL_CLIMB_FORCE = 65,
    NUKE_RADIUS = 18,
    TOXIC_RESPONSES = { bedDestroyed = "LOL Good Luck Fixing Your Bed|ADZX2" },
    FOV = 120,
    JUMP_VELOCITY = 50
}

local states = {
    isFlying = false,
    spinbot = false,
    velocityOverride = nil,
    fakeLag = false,
    currentTarget = nil,
    orbitAngle = 0,
    descentTimer = 0,
    lastSafePosition = root.Position,
    initialized = false,
    isTeleporting = false
}

local function getService(name)
    local s=pcall(function() return game:GetService(name) end)
    if not s then return game:GetService(MemoryBypass.Deobfuscate(name)) end
    return s
end

local function debugLog(msg) end

local function initializeConfig()
    config.DETECTION_RADIUS = 6
    config.ORBIT_RADIUS = 4
    config.ORBIT_HEIGHT = 6
    config.ORBIT_SPEED = 2
    config.DESCENT_INTERVAL = 2
    config.DESCENT_DELAY = 0.1
    config.SAFE_HP_THRESHOLD = 35
    config.SAFE_RADIUS = 6
    config.FLY_SPEED = 55
    config.AUTO_SPRINT_SPEED = 16
    config.REACH_DISTANCE = 50
    config.WALL_CLIMB_FORCE = 65
    config.NUKE_RADIUS = 18
    config.FOV = 120
    config.JUMP_VELOCITY = 50
    states.lastSafePosition = root.Position
end

local function getSafeLocation()
    local offsets={Vector3.new(50,0,0),Vector3.new(-50,0,0),Vector3.new(0,0,50),Vector3.new(0,0,-50)}
    for _,o in ipairs(offsets) do
        local c=root.Position+o
        local s=true
        for _,e in ipairs(Players:GetPlayers()) do
            if e~=player and e.Character and e.Character:FindFirstChild("HumanoidRootPart") then
                if(e.Character.HumanoidRootPart.Position - c).Magnitude<config.SAFE_RADIUS then s=false break end
            end
        end
        if s then return c end
    end
    return root.Position
end

local function createConfigUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ConfigUI"
    screenGui.Parent = player:WaitForChild("PlayerGui")
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0,300,0,400)
    frame.Position = UDim2.new(0,50,0,50)
    frame.BackgroundColor3 = Color3.new(0.1,0.1,0.1)
    frame.Parent = screenGui
    local title = Instance.new("TextLabel")
    title.Text = "Configuration Menu"
    title.Size = UDim2.new(1,0,0,50)
    title.BackgroundTransparency = 1
    title.Font = Enum.Font.SourceSansBold
    title.TextScaled = true
    title.TextColor3 = Color3.new(1,1,1)
    title.Parent = frame
    local detectionRadiusLabel = Instance.new("TextLabel")
    detectionRadiusLabel.Text = "Detection Radius: "..tostring(config.DETECTION_RADIUS)
    detectionRadiusLabel.Size = UDim2.new(1,0,0,30)
    detectionRadiusLabel.Position = UDim2.new(0,0,0,60)
    detectionRadiusLabel.BackgroundTransparency = 1
    detectionRadiusLabel.TextColor3 = Color3.new(1,1,1)
    detectionRadiusLabel.TextScaled = true
    detectionRadiusLabel.Parent = frame
    local orbitRadiusLabel = Instance.new("TextLabel")
    orbitRadiusLabel.Text = "Orbit Radius: "..tostring(config.ORBIT_RADIUS)
    orbitRadiusLabel.Size = UDim2.new(1,0,0,30)
    orbitRadiusLabel.Position = UDim2.new(0,0,0,100)
    orbitRadiusLabel.BackgroundTransparency = 1
    orbitRadiusLabel.TextColor3 = Color3.new(1,1,1)
    orbitRadiusLabel.TextScaled = true
    orbitRadiusLabel.Parent = frame
    local orbitHeightLabel = Instance.new("TextLabel")
    orbitHeightLabel.Text = "Orbit Height: "..tostring(config.ORBIT_HEIGHT)
    orbitHeightLabel.Size = UDim2.new(1,0,0,30)
    orbitHeightLabel.Position = UDim2.new(0,0,0,140)
    orbitHeightLabel.BackgroundTransparency = 1
    orbitHeightLabel.TextColor3 = Color3.new(1,1,1)
    orbitHeightLabel.TextScaled = true
    orbitHeightLabel.Parent = frame
    local descentIntervalLabel = Instance.new("TextLabel")
    descentIntervalLabel.Text = "Descent Interval: "..tostring(config.DESCENT_INTERVAL)
    descentIntervalLabel.Size = UDim2.new(1,0,0,30)
    descentIntervalLabel.Position = UDim2.new(0,0,0,180)
    descentIntervalLabel.BackgroundTransparency = 1
    descentIntervalLabel.TextColor3 = Color3.new(1,1,1)
    descentIntervalLabel.TextScaled = true
    descentIntervalLabel.Parent = frame
    local safeHPLabel = Instance.new("TextLabel")
    safeHPLabel.Text = "Safe HP Threshold: "..tostring(config.SAFE_HP_THRESHOLD)
    safeHPLabel.Size = UDim2.new(1,0,0,30)
    safeHPLabel.Position = UDim2.new(0,0,0,220)
    safeHPLabel.BackgroundTransparency = 1
    safeHPLabel.TextColor3 = Color3.new(1,1,1)
    safeHPLabel.TextScaled = true
    safeHPLabel.Parent = frame
    local autoSprintLabel = Instance.new("TextLabel")
    autoSprintLabel.Text = "Auto Sprint Speed: "..tostring(config.AUTO_SPRINT_SPEED)
    autoSprintLabel.Size = UDim2.new(1,0,0,30)
    autoSprintLabel.Position = UDim2.new(0,0,0,260)
    autoSprintLabel.BackgroundTransparency = 1
    autoSprintLabel.TextColor3 = Color3.new(1,1,1)
    autoSprintLabel.TextScaled = true
    autoSprintLabel.Parent = frame
    local fovLabel = Instance.new("TextLabel")
    fovLabel.Text = "FOV: "..tostring(config.FOV)
    fovLabel.Size = UDim2.new(1,0,0,30)
    fovLabel.Position = UDim2.new(0,0,0,300)
    fovLabel.BackgroundTransparency = 1
    fovLabel.TextColor3 = Color3.new(1,1,1)
    fovLabel.TextScaled = true
    fovLabel.Parent = frame
    local closeButton = Instance.new("TextButton")
    closeButton.Text = "Close"
    closeButton.Size = UDim2.new(0,100,0,40)
    closeButton.Position = UDim2.new(0,100,0,350)
    closeButton.BackgroundColor3 = Color3.new(1,0,0)
    closeButton.TextScaled = true
    closeButton.Parent = frame
    closeButton.MouseButton1Click:Connect(function() screenGui:Destroy() end)
end

local function createESP(character)
    local head = character:FindFirstChild("Head")
    if not head then return end
    local bg = Instance.new("BillboardGui")
    bg.Name = "ESP"
    bg.Adornee = head
    bg.Size = UDim2.new(4,0,2,0)
    bg.StudsOffset = Vector3.new(0,2,0)
    bg.AlwaysOnTop = true
    local nl = Instance.new("TextLabel")
    nl.Parent = bg
    nl.BackgroundTransparency = 1
    nl.Text = character.Parent.Name
    nl.TextColor3 = Color3.fromRGB(0,170,255)
    nl.TextStrokeTransparency = 0
    nl.Size = UDim2.new(1,0,1,0)
    nl.Font = Enum.Font.SourceSansBold
    nl.TextScaled = true
    local hl = Instance.new("TextLabel")
    hl.Parent = bg
    hl.BackgroundTransparency = 1
    hl.TextColor3 = Color3.fromRGB(255,0,0)
    hl.TextStrokeTransparency = 0
    hl.Size = UDim2.new(1,0,1,0)
    hl.Position = UDim2.new(0,0,1,0)
    hl.Font = Enum.Font.SourceSansBold
    hl.TextScaled = true
    RunService.RenderStepped:Connect(function()
        local hum = character:FindFirstChildOfClass("Humanoid")
        if hum then hl.Text = "Health: "..math.floor(hum.Health) end
    end)
    bg.Parent = head
end

local function initializeESP()
    for _,enemy in ipairs(Players:GetPlayers()) do
        if enemy ~= player and enemy.Team ~= player.Team then
            enemy.CharacterAdded:Connect(function(character) createESP(character) end)
            if enemy.Character then createESP(enemy.Character) end
        end
    end
    Players.PlayerAdded:Connect(function(newPlayer)
        if newPlayer.Team ~= player.Team then
            newPlayer.CharacterAdded:Connect(function(character) createESP(character) end)
        end
    end)
end

local function wallClimb()
    RunService.RenderStepped:Connect(function()
        local rp = RaycastParams.new()
        rp.FilterDescendantsInstances = {character}
        local res = Workspace:Raycast(root.Position, root.CFrame.LookVector * config.REACH_DISTANCE, rp)
        if res and res.Instance.CanCollide then
            root.Velocity = Vector3.new(root.Velocity.X, config.WALL_CLIMB_FORCE, root.Velocity.Z)
        end
    end)
end

local function antiVoid()
    RunService.RenderStepped:Connect(function()
        local rp = RaycastParams.new()
        rp.FilterDescendantsInstances = {character}
        local res = Workspace:Raycast(root.Position, Vector3.new(0,-config.SAFE_RADIUS,0), rp)
        if not res then root.CFrame = CFrame.new(states.lastSafePosition) end
    end)
end

local function infiniteJump()
    UserInputService.InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.Space then
            root.Velocity = Vector3.new(root.Velocity.X, config.JUMP_VELOCITY, root.Velocity.Z)
        end
    end)
end

local function autoSprint()
    RunService.RenderStepped:Connect(function()
        if humanoid.MoveDirection.Magnitude > 0 then
            humanoid.WalkSpeed = config.AUTO_SPRINT_SPEED
        end
    end)
end

local function antiSuffocation()
    RunService.RenderStepped:Connect(function()
        if root.Position.Y < config.SAFE_RADIUS and root.Velocity.Y == 0 then
            root.CFrame = root.CFrame + Vector3.new(0,2,0)
        end
    end)
end

local function antiKnockback()
    RunService.RenderStepped:Connect(function()
        root.Velocity = root.Velocity * 0.1
    end)
end

local function killAura()
    RunService.RenderStepped:Connect(function()
        for _,enemy in ipairs(Players:GetPlayers()) do
            if enemy ~= player and enemy.Character and enemy.Character:FindFirstChild("HumanoidRootPart") then
                local d = (enemy.Character.HumanoidRootPart.Position - root.Position).Magnitude
                if d <= 3 then
                    local tool = character:FindFirstChildWhichIsA("Tool")
                    if tool then tool:Activate() end
                end
            end
        end
    end)
end

local function nuker()
    RunService.RenderStepped:Connect(function()
        for _,part in ipairs(Workspace:GetDescendants()) do
            if part.Name == "bed" and part:IsA("BasePart") then
                local d = (part.Position - root.Position).Magnitude
                if d <= config.NUKE_RADIUS then
                    local tool = character:FindFirstChildWhichIsA("Tool")
                    if tool then
                        humanoid:EquipTool(tool)
                        tool:Activate()
                    end
                end
            end
        end
    end)
end

local function setFOV()
    Camera.FieldOfView = config.FOV
end

local function advancedAntiHit()
    RunService.RenderStepped:Connect(function(dt)
        states.descentTimer = states.descentTimer + dt
        local lowestHP = math.huge
        local chosenTarget = nil
        for _,enemy in ipairs(Players:GetPlayers()) do
            if enemy ~= player and enemy.Character and enemy.Character:FindFirstChild("HumanoidRootPart") and enemy.Character:FindFirstChild("Humanoid") then
                local d = (enemy.Character.HumanoidRootPart.Position - root.Position).Magnitude
                if d <= config.DETECTION_RADIUS then
                    local enemyHP = enemy.Character.Humanoid.Health
                    if enemyHP < lowestHP then
                        lowestHP = enemyHP
                        chosenTarget = enemy
                    end
                end
            end
        end
        if chosenTarget then states.currentTarget = chosenTarget else states.currentTarget = nil end
        if states.currentTarget and states.currentTarget.Character and states.currentTarget.Character:FindFirstChild("HumanoidRootPart") then
            local targetHRP = states.currentTarget.Character.HumanoidRootPart
            local targetPos = targetHRP.Position
            if states.descentTimer >= config.DESCENT_INTERVAL then
                root.CFrame = CFrame.new(targetPos.X, targetPos.Y, targetPos.Z)
                wait(config.DESCENT_DELAY)
                root.CFrame = CFrame.new(targetPos.X, targetPos.Y + config.ORBIT_HEIGHT, targetPos.Z)
                states.descentTimer = 0
            else
                states.orbitAngle = states.orbitAngle + config.ORBIT_SPEED * dt
                local orbitX = targetPos.X + config.ORBIT_RADIUS * math.cos(states.orbitAngle)
                local orbitZ = targetPos.Z + config.ORBIT_RADIUS * math.sin(states.orbitAngle)
                local orbitY = targetPos.Y + config.ORBIT_HEIGHT
                root.CFrame = CFrame.new(orbitX, orbitY, orbitZ)
            end
        end
        if humanoid.Health < config.SAFE_HP_THRESHOLD then
            local safePos = getSafeLocation()
            root.CFrame = CFrame.new(safePos)
        end
    end)
end

local function antiHitTeleport()
    RunService.RenderStepped:Connect(function()
        if not states.isTeleporting then
            states.isTeleporting = true
            local originalPos = root.Position
            root.CFrame = CFrame.new(root.Position + Vector3.new(0, config.TELEPORT_HEIGHT, 0))
            task.wait(config.TELEPORT_DELAY)
            root.CFrame = CFrame.new(originalPos)
            states.isTeleporting = false
        end
    end)
end

local function spinbot()
    RunService.RenderStepped:Connect(function()
        if states.spinbot then
            root.CFrame = root.CFrame * CFrame.Angles(0, math.rad(config.SPINBOT_SPEED), 0)
        end
    end)
end

local function antiDetection()
    math.random = function(...) return math.random(...) + (os.clock()%0.1) end
    local oldInvoke = debug.getregistry().InvokeServer
    debug.getregistry().InvokeServer = function(...)
        task.wait(config.FAKE_PING/1000)
        return oldInvoke(...)
    end
end

local function speedHack()
    humanoid.WalkSpeed = 16 * config.SPEED_MULTIPLIER
    humanoid.JumpPower = config.JUMP_POWER
    RunService.RenderStepped:Connect(function()
        if states.velocityOverride then root.Velocity = states.velocityOverride end
    end)
end

local function fly()
    local bv = Instance.new("BodyVelocity")
    bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
    bv.Parent = root
    UserInputService.InputBegan:Connect(function(i)
        if i.KeyCode == Enum.KeyCode.E then states.isFlying = not states.isFlying end
    end)
    RunService.RenderStepped:Connect(function()
        if states.isFlying then bv.Velocity = Camera.CFrame.LookVector * config.FLY_SPEED end
    end)
end

local function initializeFeatures()
    initializeESP()
    speedHack()
    fly()
    advancedAntiHit()
    wallClimb()
    antiVoid()
    infiniteJump()
    autoSprint()
    antiSuffocation()
    antiKnockback()
    killAura()
    nuker()
    setFOV()
    antiHitTeleport()
    spinbot()
    antiDetection()
    createConfigUI()
end

local function onCharacterAdded(char)
    character = char
    humanoid = char:WaitForChild("Humanoid", 10)
    root = char:WaitForChild("HumanoidRootPart", 10)
    states.lastSafePosition = root.Position
    initializeConfig()
    initializeFeatures()
end

player.CharacterAdded:Connect(onCharacterAdded)
onCharacterAdded(character)

local function performanceMonitor()
    while true do
        local fps = 1/RunService.RenderStepped:Wait()
        debugLog("FPS: "..tostring(math.floor(fps)))
    end
end

spawn(performanceMonitor)

while true do
    RunService.RenderStepped:Wait()
    for i=1,50 do local t={} for j=1,50 do t[j]=math.random() end end
end
